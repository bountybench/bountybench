server {
    listen 80;
    server_name localhost;
    
    # Base frontend route in order to serve the frontend application in the browser
    location / {
        proxy_pass http://frontend-service:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    # Backend WebSocket connections - require workflow ID
    location ~ ^/ws/([^/]+)$ {
        # Backend WebSocket with workflow ID
        proxy_pass http://backend-service:7999/ws/$1;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        
        proxy_read_timeout 86400;  # Prevent socket timeout
    }

    # Frontend service uses its own development WebSocket
    location = /ws {
        proxy_pass http://frontend-service:3000/ws;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
    }

    # -- Workflow endpoints
    location /workflow/ {
        proxy_pass http://backend-service:7999/workflow/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    # -- Logs endpoints
    location /logs {
        proxy_pass http://backend-service:7999/logs;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    # -- Service API endpoints
    location /service/api-service/ {
        proxy_pass http://backend-service:7999/service/api-service/;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    # -- Workflow ID endpoints
    # We use a regex (~) to capture the workflow ID and pass it to the backend
    location ~ ^/workflow/([^/]+)/(.*)$ {
        proxy_pass http://backend-service:7999/workflow/$1/$2;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    }

    # Handle 404s - redirect to frontend for single-page app routing
    location @frontend {
        proxy_pass http://frontend-service:3000;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
    }

    # Optimize for performance
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript;
}