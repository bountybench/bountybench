name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  lint:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository for linting
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      
      - name: Fetch base branch for pull requests
        if: github.event_name == 'pull_request'
        run: git fetch origin ${{ github.base_ref }}
          
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
          
      - name: Lint modified Python files
        run: |
          python -m pip install --upgrade pip
          pip install black isort
          # Simplified grep pattern to avoid parsing issues
          MODIFIED_PY_FILES=$(git diff --name-only --diff-filter=d origin/main HEAD | grep ".py$" | grep -v "^bountybench/" || echo "")
          if [ -n "$MODIFIED_PY_FILES" ]; then
            echo "Running black on modified files..."
            echo "$MODIFIED_PY_FILES" | xargs black --check
            echo "Running isort on modified files..."
            echo "$MODIFIED_PY_FILES" | xargs isort --check --profile black
          else
            echo "No modified Python files to lint"
          fi

  frontend-tests:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Free disk space
        run: |
          # Extreme disk space cleanup
          sudo rm -rf /usr/local/lib/android /usr/share/dotnet /opt/ghc /opt/hostedtoolcache/CodeQL
          docker system prune -af || true
          df -h
          
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
      
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '14'
      
      - name: Install frontend dependencies
        working-directory: ./frontend
        run: npm install
      
      - name: Run frontend tests
        working-directory: ./frontend
        run: |
          CI=true npm test -- --watchAll=false

  backend-tests:
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Free disk space
        run: |
          # Extreme disk space cleanup before starting
          sudo rm -rf /usr/local/lib/android /usr/share/dotnet /opt/ghc /opt/hostedtoolcache/CodeQL
          sudo rm -rf /var/lib/apt/lists/*
          find /opt/hostedtoolcache -mindepth 1 -maxdepth 1 -type d -not -path "*/Python/3.11*" -exec sudo rm -rf {} \;
          docker system prune -af || true
          df -h
          
      - name: Checkout repository with submodules
        uses: actions/checkout@v4
        with:
          fetch-depth: 1
          submodules: false
          token: ${{ secrets.GH_TOKEN }}

      - name: Set up Git
        run: |
          git config --global credential.helper store
          git config --global url."https://x-access-token:${{ secrets.GH_TOKEN }}@github.com/".insteadOf "https://github.com/"
          git config --global --add safe.directory '*'
          git config --global user.email "action@github.com"
          git config --global user.name "GitHub Action"
          
          # Create auth file
          echo "https://x-access-token:${{ secrets.GH_TOKEN }}@github.com" > ~/.git-credentials
          chmod 600 ~/.git-credentials

      - name: Manually check out submodule
        run: |
          echo "Initializing only required submodules..."
          git submodule update --init bountybench
      
      - name: Check Disk Space
        run: df -h
          
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Set up QEMU
        run: docker run --rm --privileged multiarch/qemu-user-static --reset -p yes
        
      - name: Docker Cleanup before pulling new image
        run: |
          docker system prune -af
          docker image prune -af

      - name: Check Disk Space Before Docker Pull
        run: df -h

      - name: Pull Docker Container
        run: |
          docker pull --quiet cybench/bountyagent:latest
          docker manifest inspect cybench/bountyagent:latest
  
      - name: Display disk space after pulling image
        run: df -H
  
      - name: Create Docker Network
        run: docker network create shared_net || true
      
      - name: Run backend tests with coverage
        run: |
          coverage run --rcfile=.coveragerc -m pytest -s tests/
      
      - name: Generate Coverage Report
        run: coverage report
